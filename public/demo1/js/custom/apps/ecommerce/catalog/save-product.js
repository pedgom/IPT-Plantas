/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/assets/core/js/custom/apps/ecommerce/catalog/save-product.js":
/*!********************************************************************************!*\
  !*** ./resources/assets/core/js/custom/apps/ecommerce/catalog/save-product.js ***!
  \********************************************************************************/
/***/ (() => {

eval(" // Class definition\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar KTAppEcommerceSaveProduct = function () {\n  // Private functions\n  // Init quill editor\n  var initQuill = function initQuill() {\n    // Define all elements for quill editor\n    var elements = ['#kt_ecommerce_add_product_description', '#kt_ecommerce_add_product_meta_description']; // Loop all elements\n\n    elements.forEach(function (element) {\n      // Get quill element\n      var quill = document.querySelector(element); // Break if element not found\n\n      if (!quill) {\n        return;\n      } // Init quill --- more info: https://quilljs.com/docs/quickstart/\n\n\n      quill = new Quill(element, {\n        modules: {\n          toolbar: [[{\n            header: [1, 2, false]\n          }], ['bold', 'italic', 'underline'], ['image', 'code-block']]\n        },\n        placeholder: 'Type your text here...',\n        theme: 'snow' // or 'bubble'\n\n      });\n    });\n  }; // Init tagify\n\n\n  var initTagify = function initTagify() {\n    // Define all elements for tagify\n    var elements = ['#kt_ecommerce_add_product_category', '#kt_ecommerce_add_product_tags']; // Loop all elements\n\n    elements.forEach(function (element) {\n      // Get tagify element\n      var tagify = document.querySelector(element); // Break if element not found\n\n      if (!tagify) {\n        return;\n      } // Init tagify --- more info: https://yaireo.github.io/tagify/\n\n\n      new Tagify(tagify, {\n        whitelist: [\"new\", \"trending\", \"sale\", \"discounted\", \"selling fast\", \"last 10\"],\n        dropdown: {\n          maxItems: 20,\n          // <- mixumum allowed rendered suggestions\n          classname: \"tagify__inline__suggestions\",\n          // <- custom classname for this dropdown, so it could be targeted\n          enabled: 0,\n          // <- show suggestions on focus\n          closeOnSelect: false // <- do not hide the suggestions dropdown once an item has been selected\n\n        }\n      });\n    });\n  }; // Init form repeater --- more info: https://github.com/DubFriend/jquery.repeater\n\n\n  var initFormRepeater = function initFormRepeater() {\n    $('#kt_ecommerce_add_product_options').repeater({\n      initEmpty: false,\n      defaultValues: {\n        'text-input': 'foo'\n      },\n      show: function show() {\n        $(this).slideDown(); // Init select2 on new repeated items\n\n        initConditionsSelect2();\n      },\n      hide: function hide(deleteElement) {\n        $(this).slideUp(deleteElement);\n      }\n    });\n  }; // Init condition select2\n\n\n  var initConditionsSelect2 = function initConditionsSelect2() {\n    // Tnit new repeating condition types\n    var allConditionTypes = document.querySelectorAll('[data-kt-ecommerce-catalog-add-product=\"product_option\"]');\n    allConditionTypes.forEach(function (type) {\n      if ($(type).hasClass(\"select2-hidden-accessible\")) {\n        return;\n      } else {\n        $(type).select2({\n          minimumResultsForSearch: -1\n        });\n      }\n    });\n  }; // Init noUIslider\n\n\n  var initSlider = function initSlider() {\n    var slider = document.querySelector(\"#kt_ecommerce_add_product_discount_slider\");\n    var value = document.querySelector(\"#kt_ecommerce_add_product_discount_label\");\n    noUiSlider.create(slider, {\n      start: [10],\n      connect: true,\n      range: {\n        \"min\": 1,\n        \"max\": 100\n      }\n    });\n    slider.noUiSlider.on(\"update\", function (values, handle) {\n      value.innerHTML = Math.round(values[handle]);\n\n      if (handle) {\n        value.innerHTML = Math.round(values[handle]);\n      }\n    });\n  }; // Init DropzoneJS --- more info:\n\n\n  var initDropzone = function initDropzone() {\n    var myDropzone = new Dropzone(\"#kt_ecommerce_add_product_media\", {\n      url: \"https://keenthemes.com/scripts/void.php\",\n      // Set the url for your upload script location\n      paramName: \"file\",\n      // The name that will be used to transfer the file\n      maxFiles: 10,\n      maxFilesize: 10,\n      // MB\n      addRemoveLinks: true,\n      accept: function accept(file, done) {\n        if (file.name == \"wow.jpg\") {\n          done(\"Naha, you don't.\");\n        } else {\n          done();\n        }\n      }\n    });\n  }; // Handle discount options\n\n\n  var handleDiscount = function handleDiscount() {\n    var discountOptions = document.querySelectorAll('input[name=\"discount_option\"]');\n    var percentageEl = document.getElementById('kt_ecommerce_add_product_discount_percentage');\n    var fixedEl = document.getElementById('kt_ecommerce_add_product_discount_fixed');\n    discountOptions.forEach(function (option) {\n      option.addEventListener('change', function (e) {\n        var value = e.target.value;\n\n        switch (value) {\n          case '2':\n            {\n              percentageEl.classList.remove('d-none');\n              fixedEl.classList.add('d-none');\n              break;\n            }\n\n          case '3':\n            {\n              percentageEl.classList.add('d-none');\n              fixedEl.classList.remove('d-none');\n              break;\n            }\n\n          default:\n            {\n              percentageEl.classList.add('d-none');\n              fixedEl.classList.add('d-none');\n              break;\n            }\n        }\n      });\n    });\n  }; // Shipping option handler\n\n\n  var handleShipping = function handleShipping() {\n    var shippingOption = document.getElementById('kt_ecommerce_add_product_shipping_checkbox');\n    var shippingForm = document.getElementById('kt_ecommerce_add_product_shipping');\n    shippingOption.addEventListener('change', function (e) {\n      var value = e.target.checked;\n\n      if (value) {\n        shippingForm.classList.remove('d-none');\n      } else {\n        shippingForm.classList.add('d-none');\n      }\n    });\n  }; // Category status handler\n\n\n  var handleStatus = function handleStatus() {\n    var target = document.getElementById('kt_ecommerce_add_product_status');\n    var select = document.getElementById('kt_ecommerce_add_product_status_select');\n    var statusClasses = ['bg-success', 'bg-warning', 'bg-danger'];\n    $(select).on('change', function (e) {\n      var value = e.target.value;\n\n      switch (value) {\n        case \"published\":\n          {\n            var _target$classList;\n\n            (_target$classList = target.classList).remove.apply(_target$classList, statusClasses);\n\n            target.classList.add('bg-success');\n            hideDatepicker();\n            break;\n          }\n\n        case \"scheduled\":\n          {\n            var _target$classList2;\n\n            (_target$classList2 = target.classList).remove.apply(_target$classList2, statusClasses);\n\n            target.classList.add('bg-warning');\n            showDatepicker();\n            break;\n          }\n\n        case \"inactive\":\n          {\n            var _target$classList3;\n\n            (_target$classList3 = target.classList).remove.apply(_target$classList3, statusClasses);\n\n            target.classList.add('bg-danger');\n            hideDatepicker();\n            break;\n          }\n\n        case \"draft\":\n          {\n            var _target$classList4;\n\n            (_target$classList4 = target.classList).remove.apply(_target$classList4, statusClasses);\n\n            target.classList.add('bg-primary');\n            hideDatepicker();\n            break;\n          }\n\n        default:\n          break;\n      }\n    }); // Handle datepicker\n\n    var datepicker = document.getElementById('kt_ecommerce_add_product_status_datepicker'); // Init flatpickr --- more info: https://flatpickr.js.org/\n\n    $('#kt_ecommerce_add_product_status_datepicker').flatpickr({\n      enableTime: true,\n      dateFormat: \"Y-m-d H:i\"\n    });\n\n    var showDatepicker = function showDatepicker() {\n      datepicker.parentNode.classList.remove('d-none');\n    };\n\n    var hideDatepicker = function hideDatepicker() {\n      datepicker.parentNode.classList.add('d-none');\n    };\n  }; // Condition type handler\n\n\n  var handleConditions = function handleConditions() {\n    var allConditions = document.querySelectorAll('[name=\"method\"][type=\"radio\"]');\n    var conditionMatch = document.querySelector('[data-kt-ecommerce-catalog-add-category=\"auto-options\"]');\n    allConditions.forEach(function (radio) {\n      radio.addEventListener('change', function (e) {\n        if (e.target.value === '1') {\n          conditionMatch.classList.remove('d-none');\n        } else {\n          conditionMatch.classList.add('d-none');\n        }\n      });\n    });\n  }; // Submit form handler\n\n\n  var handleSubmit = function handleSubmit() {\n    var _fields;\n\n    // Define variables\n    var validator; // Get elements\n\n    var form = document.getElementById('kt_ecommerce_add_product_form');\n    var submitButton = document.getElementById('kt_ecommerce_add_product_submit'); // Init form validation rules. For more info check the FormValidation plugin's official documentation:https://formvalidation.io/\n\n    validator = FormValidation.formValidation(form, {\n      fields: (_fields = {\n        'product_name': {\n          validators: {\n            notEmpty: {\n              message: 'Product name is required'\n            }\n          }\n        },\n        'sku': {\n          validators: {\n            notEmpty: {\n              message: 'SKU is required'\n            }\n          }\n        }\n      }, _defineProperty(_fields, \"sku\", {\n        validators: {\n          notEmpty: {\n            message: 'Product barcode is required'\n          }\n        }\n      }), _defineProperty(_fields, 'shelf', {\n        validators: {\n          notEmpty: {\n            message: 'Shelf quantity is required'\n          }\n        }\n      }), _defineProperty(_fields, 'price', {\n        validators: {\n          notEmpty: {\n            message: 'Product base price is required'\n          }\n        }\n      }), _defineProperty(_fields, 'tax', {\n        validators: {\n          notEmpty: {\n            message: 'Product tax class is required'\n          }\n        }\n      }), _fields),\n      plugins: {\n        trigger: new FormValidation.plugins.Trigger(),\n        bootstrap: new FormValidation.plugins.Bootstrap5({\n          rowSelector: '.fv-row',\n          eleInvalidClass: '',\n          eleValidClass: ''\n        })\n      }\n    }); // Handle submit button\n\n    submitButton.addEventListener('click', function (e) {\n      e.preventDefault(); // Validate form before submit\n\n      if (validator) {\n        validator.validate().then(function (status) {\n          console.log('validated!');\n\n          if (status == 'Valid') {\n            submitButton.setAttribute('data-kt-indicator', 'on'); // Disable submit button whilst loading\n\n            submitButton.disabled = true;\n            setTimeout(function () {\n              submitButton.removeAttribute('data-kt-indicator');\n              Swal.fire({\n                text: \"Form has been successfully submitted!\",\n                icon: \"success\",\n                buttonsStyling: false,\n                confirmButtonText: \"Ok, got it!\",\n                customClass: {\n                  confirmButton: \"btn btn-primary\"\n                }\n              }).then(function (result) {\n                if (result.isConfirmed) {\n                  // Enable submit button after loading\n                  submitButton.disabled = false; // Redirect to customers list page\n\n                  window.location = form.getAttribute(\"data-kt-redirect\");\n                }\n              });\n            }, 2000);\n          } else {\n            Swal.fire({\n              html: \"Sorry, looks like there are some errors detected, please try again. <br/><br/>Please note that there may be errors in the <strong>General</strong> or <strong>Advanced</strong> tabs\",\n              icon: \"error\",\n              buttonsStyling: false,\n              confirmButtonText: \"Ok, got it!\",\n              customClass: {\n                confirmButton: \"btn btn-primary\"\n              }\n            });\n          }\n        });\n      }\n    });\n  }; // Public methods\n\n\n  return {\n    init: function init() {\n      // Init forms\n      initQuill();\n      initTagify();\n      initSlider();\n      initFormRepeater();\n      initDropzone();\n      initConditionsSelect2(); // Handle forms\n\n      handleStatus();\n      handleConditions();\n      handleDiscount();\n      handleShipping();\n      handleSubmit();\n    }\n  };\n}(); // On document ready\n\n\nKTUtil.onDOMContentLoaded(function () {\n  KTAppEcommerceSaveProduct.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXNvdXJjZXMvYXNzZXRzL2NvcmUvanMvY3VzdG9tL2FwcHMvZWNvbW1lcmNlL2NhdGFsb2cvc2F2ZS1wcm9kdWN0LmpzLmpzIiwibWFwcGluZ3MiOiJDQUVBOzs7O0FBQ0EsSUFBSUEseUJBQXlCLEdBQUcsWUFBWTtBQUV4QztBQUVBO0FBQ0EsTUFBTUMsU0FBUyxHQUFHLFNBQVpBLFNBQVksR0FBTTtBQUNwQjtBQUNBLFFBQU1DLFFBQVEsR0FBRyxDQUNiLHVDQURhLEVBRWIsNENBRmEsQ0FBakIsQ0FGb0IsQ0FPcEI7O0FBQ0FBLElBQUFBLFFBQVEsQ0FBQ0MsT0FBVCxDQUFpQixVQUFBQyxPQUFPLEVBQUk7QUFDeEI7QUFDQSxVQUFJQyxLQUFLLEdBQUdDLFFBQVEsQ0FBQ0MsYUFBVCxDQUF1QkgsT0FBdkIsQ0FBWixDQUZ3QixDQUl4Qjs7QUFDQSxVQUFJLENBQUNDLEtBQUwsRUFBWTtBQUNSO0FBQ0gsT0FQdUIsQ0FTeEI7OztBQUNBQSxNQUFBQSxLQUFLLEdBQUcsSUFBSUcsS0FBSixDQUFVSixPQUFWLEVBQW1CO0FBQ3ZCSyxRQUFBQSxPQUFPLEVBQUU7QUFDTEMsVUFBQUEsT0FBTyxFQUFFLENBQ0wsQ0FBQztBQUNHQyxZQUFBQSxNQUFNLEVBQUUsQ0FBQyxDQUFELEVBQUksQ0FBSixFQUFPLEtBQVA7QUFEWCxXQUFELENBREssRUFJTCxDQUFDLE1BQUQsRUFBUyxRQUFULEVBQW1CLFdBQW5CLENBSkssRUFLTCxDQUFDLE9BQUQsRUFBVSxZQUFWLENBTEs7QUFESixTQURjO0FBVXZCQyxRQUFBQSxXQUFXLEVBQUUsd0JBVlU7QUFXdkJDLFFBQUFBLEtBQUssRUFBRSxNQVhnQixDQVdUOztBQVhTLE9BQW5CLENBQVI7QUFhSCxLQXZCRDtBQXdCSCxHQWhDRCxDQUx3QyxDQXVDeEM7OztBQUNBLE1BQU1DLFVBQVUsR0FBRyxTQUFiQSxVQUFhLEdBQU07QUFDckI7QUFDQSxRQUFNWixRQUFRLEdBQUcsQ0FDYixvQ0FEYSxFQUViLGdDQUZhLENBQWpC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LEVBQUU7QUFETjtBQUxQLGFBQVY7QUFTSDtBQUNKLFNBekNEO0FBMENIO0FBQ0osS0FoREQ7QUFpREgsR0FySEQsQ0E3UXdDLENBb1l4Qzs7O0FBQ0EsU0FBTztBQUNITyxJQUFBQSxJQUFJLEVBQUUsZ0JBQVk7QUFDZDtBQUNBekksTUFBQUEsU0FBUztBQUNUYSxNQUFBQSxVQUFVO0FBQ1YwQixNQUFBQSxVQUFVO0FBQ1ZqQixNQUFBQSxnQkFBZ0I7QUFDaEIrQixNQUFBQSxZQUFZO0FBQ1p4QixNQUFBQSxxQkFBcUIsR0FQUCxDQVNkOztBQUNBb0QsTUFBQUEsWUFBWTtBQUNaVSxNQUFBQSxnQkFBZ0I7QUFDaEIxQixNQUFBQSxjQUFjO0FBQ2RZLE1BQUFBLGNBQWM7QUFDZGtCLE1BQUFBLFlBQVk7QUFDZjtBQWhCRSxHQUFQO0FBa0JILENBdlorQixFQUFoQyxDLENBeVpBOzs7QUFDQTJDLE1BQU0sQ0FBQ0Msa0JBQVAsQ0FBMEIsWUFBWTtBQUNsQzVJLEVBQUFBLHlCQUF5QixDQUFDMEksSUFBMUI7QUFDSCxDQUZEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vcmVzb3VyY2VzL2Fzc2V0cy9jb3JlL2pzL2N1c3RvbS9hcHBzL2Vjb21tZXJjZS9jYXRhbG9nL3NhdmUtcHJvZHVjdC5qcz9mMTJjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xyXG5cclxuLy8gQ2xhc3MgZGVmaW5pdGlvblxyXG52YXIgS1RBcHBFY29tbWVyY2VTYXZlUHJvZHVjdCA9IGZ1bmN0aW9uICgpIHtcclxuXHJcbiAgICAvLyBQcml2YXRlIGZ1bmN0aW9uc1xyXG5cclxuICAgIC8vIEluaXQgcXVpbGwgZWRpdG9yXHJcbiAgICBjb25zdCBpbml0UXVpbGwgPSAoKSA9PiB7XHJcbiAgICAgICAgLy8gRGVmaW5lIGFsbCBlbGVtZW50cyBmb3IgcXVpbGwgZWRpdG9yXHJcbiAgICAgICAgY29uc3QgZWxlbWVudHMgPSBbXHJcbiAgICAgICAgICAgICcja3RfZWNvbW1lcmNlX2FkZF9wcm9kdWN0X2Rlc2NyaXB0aW9uJyxcclxuICAgICAgICAgICAgJyNrdF9lY29tbWVyY2VfYWRkX3Byb2R1Y3RfbWV0YV9kZXNjcmlwdGlvbidcclxuICAgICAgICBdO1xyXG5cclxuICAgICAgICAvLyBMb29wIGFsbCBlbGVtZW50c1xyXG4gICAgICAgIGVsZW1lbnRzLmZvckVhY2goZWxlbWVudCA9PiB7XHJcbiAgICAgICAgICAgIC8vIEdldCBxdWlsbCBlbGVtZW50XHJcbiAgICAgICAgICAgIGxldCBxdWlsbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoZWxlbWVudCk7XHJcblxyXG4gICAgICAgICAgICAvLyBCcmVhayBpZiBlbGVtZW50IG5vdCBmb3VuZFxyXG4gICAgICAgICAgICBpZiAoIXF1aWxsKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIC8vIEluaXQgcXVpbGwgLS0tIG1vcmUgaW5mbzogaHR0cHM6Ly9xdWlsbGpzLmNvbS9kb2NzL3F1aWNrc3RhcnQvXHJcbiAgICAgICAgICAgIHF1aWxsID0gbmV3IFF1aWxsKGVsZW1lbnQsIHtcclxuICAgICAgICAgICAgICAgIG1vZHVsZXM6IHtcclxuICAgICAgICAgICAgICAgICAgICB0b29sYmFyOiBbXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFt7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZWFkZXI6IFsxLCAyLCBmYWxzZV1cclxuICAgICAgICAgICAgICAgICAgICAgICAgfV0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFsnYm9sZCcsICdpdGFsaWMnLCAndW5kZXJsaW5lJ10sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFsnaW1hZ2UnLCAnY29kZS1ibG9jayddXHJcbiAgICAgICAgICAgICAgICAgICAgXVxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyOiAnVHlwZSB5b3VyIHRleHQgaGVyZS4uLicsXHJcbiAgICAgICAgICAgICAgICB0aGVtZTogJ3Nub3cnIC8vIG9yICdidWJibGUnXHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIEluaXQgdGFnaWZ5XHJcbiAgICBjb25zdCBpbml0VGFnaWZ5ID0gKCkgPT4ge1xyXG4gICAgICAgIC8vIERlZmluZSBhbGwgZWxlbWVudHMgZm9yIHRhZ2lmeVxyXG4gICAgICAgIGNvbnN0IGVsZW1lbnRzID0gW1xyXG4gICAgICAgICAgICAnI2t0X2Vjb21tZXJjZV9hZGRfcHJvZHVjdF9jYXRlZ29yeScsXHJcbiAgICAgICAgICAgICcja3RfZWNvbW1lcmNlX2FkZF9wcm9kdWN0X3RhZ3MnXHJcbiAgICAgICAgXTtcclxuXHJcbiAgICAgICAgLy8gTG9vcCBhbGwgZWxlbWVudHNcclxuICAgICAgICBlbGVtZW50cy5mb3JFYWNoKGVsZW1lbnQgPT4ge1xyXG4gICAgICAgICAgICAvLyBHZXQgdGFnaWZ5IGVsZW1lbnRcclxuICAgICAgICAgICAgY29uc3QgdGFnaWZ5ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihlbGVtZW50KTtcclxuXHJcbiAgICAgICAgICAgIC8vIEJyZWFrIGlmIGVsZW1lbnQgbm90IGZvdW5kXHJcbiAgICAgICAgICAgIGlmICghdGFnaWZ5KSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIC8vIEluaXQgdGFnaWZ5IC0tLSBtb3JlIGluZm86IGh0dHBzOi8veWFpcmVvLmdpdGh1Yi5pby90YWdpZnkvXHJcbiAgICAgICAgICAgIG5ldyBUYWdpZnkodGFnaWZ5LCB7XHJcbiAgICAgICAgICAgICAgICB3aGl0ZWxpc3Q6IFtcIm5ld1wiLCBcInRyZW5kaW5nXCIsIFwic2FsZVwiLCBcImRpc2NvdW50ZWRcIiwgXCJzZWxsaW5nIGZhc3RcIiwgXCJsYXN0IDEwXCJdLFxyXG4gICAgICAgICAgICAgICAgZHJvcGRvd246IHtcclxuICAgICAgICAgICAgICAgICAgICBtYXhJdGVtczogMjAsICAgICAgICAgICAvLyA8LSBtaXh1bXVtIGFsbG93ZWQgcmVuZGVyZWQgc3VnZ2VzdGlvbnNcclxuICAgICAgICAgICAgICAgICAgICBjbGFzc25hbWU6IFwidGFnaWZ5X19pbmxpbmVfX3N1Z2dlc3Rpb25zXCIsIC8vIDwtIGN1c3RvbSBjbGFzc25hbWUgZm9yIHRoaXMgZHJvcGRvd24sIHNvIGl0IGNvdWxkIGJlIHRhcmdldGVkXHJcbiAgICAgICAgICAgICAgICAgICAgZW5hYmxlZDogMCwgICAgICAgICAgICAgLy8gPC0gc2hvdyBzdWdnZXN0aW9ucyBvbiBmb2N1c1xyXG4gICAgICAgICAgICAgICAgICAgIGNsb3NlT25TZWxlY3Q6IGZhbHNlICAgIC8vIDwtIGRvIG5vdCBoaWRlIHRoZSBzdWdnZXN0aW9ucyBkcm9wZG93biBvbmNlIGFuIGl0ZW0gaGFzIGJlZW4gc2VsZWN0ZWRcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gSW5pdCBmb3JtIHJlcGVhdGVyIC0tLSBtb3JlIGluZm86IGh0dHBzOi8vZ2l0aHViLmNvbS9EdWJGcmllbmQvanF1ZXJ5LnJlcGVhdGVyXHJcbiAgICBjb25zdCBpbml0Rm9ybVJlcGVhdGVyID0gKCkgPT4ge1xyXG4gICAgICAgICQoJyNrdF9lY29tbWVyY2VfYWRkX3Byb2R1Y3Rfb3B0aW9ucycpLnJlcGVhdGVyKHtcclxuICAgICAgICAgICAgaW5pdEVtcHR5OiBmYWxzZSxcclxuXHJcbiAgICAgICAgICAgIGRlZmF1bHRWYWx1ZXM6IHtcclxuICAgICAgICAgICAgICAgICd0ZXh0LWlucHV0JzogJ2ZvbydcclxuICAgICAgICAgICAgfSxcclxuXHJcbiAgICAgICAgICAgIHNob3c6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICQodGhpcykuc2xpZGVEb3duKCk7XHJcblxyXG4gICAgICAgICAgICAgICAgLy8gSW5pdCBzZWxlY3QyIG9uIG5ldyByZXBlYXRlZCBpdGVtc1xyXG4gICAgICAgICAgICAgICAgaW5pdENvbmRpdGlvbnNTZWxlY3QyKCk7XHJcbiAgICAgICAgICAgIH0sXHJcblxyXG4gICAgICAgICAgICBoaWRlOiBmdW5jdGlvbiAoZGVsZXRlRWxlbWVudCkge1xyXG4gICAgICAgICAgICAgICAgJCh0aGlzKS5zbGlkZVVwKGRlbGV0ZUVsZW1lbnQpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gSW5pdCBjb25kaXRpb24gc2VsZWN0MlxyXG4gICAgY29uc3QgaW5pdENvbmRpdGlvbnNTZWxlY3QyID0gKCkgPT4ge1xyXG4gICAgICAgIC8vIFRuaXQgbmV3IHJlcGVhdGluZyBjb25kaXRpb24gdHlwZXNcclxuICAgICAgICBjb25zdCBhbGxDb25kaXRpb25UeXBlcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ1tkYXRhLWt0LWVjb21tZXJjZS1jYXRhbG9nLWFkZC1wcm9kdWN0PVwicHJvZHVjdF9vcHRpb25cIl0nKTtcclxuICAgICAgICBhbGxDb25kaXRpb25UeXBlcy5mb3JFYWNoKHR5cGUgPT4ge1xyXG4gICAgICAgICAgICBpZiAoJCh0eXBlKS5oYXNDbGFzcyhcInNlbGVjdDItaGlkZGVuLWFjY2Vzc2libGVcIikpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICQodHlwZSkuc2VsZWN0Mih7XHJcbiAgICAgICAgICAgICAgICAgICAgbWluaW11bVJlc3VsdHNGb3JTZWFyY2g6IC0xXHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuXHJcbiAgICAvLyBJbml0IG5vVUlzbGlkZXJcclxuICAgIGNvbnN0IGluaXRTbGlkZXIgPSAoKSA9PiB7XHJcbiAgICAgICAgdmFyIHNsaWRlciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIja3RfZWNvbW1lcmNlX2FkZF9wcm9kdWN0X2Rpc2NvdW50X3NsaWRlclwiKTtcclxuICAgICAgICB2YXIgdmFsdWUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2t0X2Vjb21tZXJjZV9hZGRfcHJvZHVjdF9kaXNjb3VudF9sYWJlbFwiKTtcclxuXHJcbiAgICAgICAgbm9VaVNsaWRlci5jcmVhdGUoc2xpZGVyLCB7XHJcbiAgICAgICAgICAgIHN0YXJ0OiBbMTBdLFxyXG4gICAgICAgICAgICBjb25uZWN0OiB0cnVlLFxyXG4gICAgICAgICAgICByYW5nZToge1xyXG4gICAgICAgICAgICAgICAgXCJtaW5cIjogMSxcclxuICAgICAgICAgICAgICAgIFwibWF4XCI6IDEwMFxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIHNsaWRlci5ub1VpU2xpZGVyLm9uKFwidXBkYXRlXCIsIGZ1bmN0aW9uICh2YWx1ZXMsIGhhbmRsZSkge1xyXG4gICAgICAgICAgICB2YWx1ZS5pbm5lckhUTUwgPSBNYXRoLnJvdW5kKHZhbHVlc1toYW5kbGVdKTtcclxuICAgICAgICAgICAgaWYgKGhhbmRsZSkge1xyXG4gICAgICAgICAgICAgICAgdmFsdWUuaW5uZXJIVE1MID0gTWF0aC5yb3VuZCh2YWx1ZXNbaGFuZGxlXSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBJbml0IERyb3B6b25lSlMgLS0tIG1vcmUgaW5mbzpcclxuICAgIGNvbnN0IGluaXREcm9wem9uZSA9ICgpID0+IHtcclxuICAgICAgICB2YXIgbXlEcm9wem9uZSA9IG5ldyBEcm9wem9uZShcIiNrdF9lY29tbWVyY2VfYWRkX3Byb2R1Y3RfbWVkaWFcIiwge1xyXG4gICAgICAgICAgICB1cmw6IFwiaHR0cHM6Ly9rZWVudGhlbWVzLmNvbS9zY3JpcHRzL3ZvaWQucGhwXCIsIC8vIFNldCB0aGUgdXJsIGZvciB5b3VyIHVwbG9hZCBzY3JpcHQgbG9jYXRpb25cclxuICAgICAgICAgICAgcGFyYW1OYW1lOiBcImZpbGVcIiwgLy8gVGhlIG5hbWUgdGhhdCB3aWxsIGJlIHVzZWQgdG8gdHJhbnNmZXIgdGhlIGZpbGVcclxuICAgICAgICAgICAgbWF4RmlsZXM6IDEwLFxyXG4gICAgICAgICAgICBtYXhGaWxlc2l6ZTogMTAsIC8vIE1CXHJcbiAgICAgICAgICAgIGFkZFJlbW92ZUxpbmtzOiB0cnVlLFxyXG4gICAgICAgICAgICBhY2NlcHQ6IGZ1bmN0aW9uIChmaWxlLCBkb25lKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoZmlsZS5uYW1lID09IFwid293LmpwZ1wiKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgZG9uZShcIk5haGEsIHlvdSBkb24ndC5cIik7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIGRvbmUoKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIEhhbmRsZSBkaXNjb3VudCBvcHRpb25zXHJcbiAgICBjb25zdCBoYW5kbGVEaXNjb3VudCA9ICgpID0+IHtcclxuICAgICAgICBjb25zdCBkaXNjb3VudE9wdGlvbnMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCdpbnB1dFtuYW1lPVwiZGlzY291bnRfb3B0aW9uXCJdJyk7XHJcbiAgICAgICAgY29uc3QgcGVyY2VudGFnZUVsID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2t0X2Vjb21tZXJjZV9hZGRfcHJvZHVjdF9kaXNjb3VudF9wZXJjZW50YWdlJyk7XHJcbiAgICAgICAgY29uc3QgZml4ZWRFbCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdrdF9lY29tbWVyY2VfYWRkX3Byb2R1Y3RfZGlzY291bnRfZml4ZWQnKTtcclxuXHJcbiAgICAgICAgZGlzY291bnRPcHRpb25zLmZvckVhY2gob3B0aW9uID0+IHtcclxuICAgICAgICAgICAgb3B0aW9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIGUgPT4ge1xyXG4gICAgICAgICAgICAgICAgY29uc3QgdmFsdWUgPSBlLnRhcmdldC52YWx1ZTtcclxuXHJcbiAgICAgICAgICAgICAgICBzd2l0Y2ggKHZhbHVlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAnMic6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcGVyY2VudGFnZUVsLmNsYXNzTGlzdC5yZW1vdmUoJ2Qtbm9uZScpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBmaXhlZEVsLmNsYXNzTGlzdC5hZGQoJ2Qtbm9uZScpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAnMyc6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcGVyY2VudGFnZUVsLmNsYXNzTGlzdC5hZGQoJ2Qtbm9uZScpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBmaXhlZEVsLmNsYXNzTGlzdC5yZW1vdmUoJ2Qtbm9uZScpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgZGVmYXVsdDoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBwZXJjZW50YWdlRWwuY2xhc3NMaXN0LmFkZCgnZC1ub25lJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGZpeGVkRWwuY2xhc3NMaXN0LmFkZCgnZC1ub25lJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gU2hpcHBpbmcgb3B0aW9uIGhhbmRsZXJcclxuICAgIGNvbnN0IGhhbmRsZVNoaXBwaW5nID0gKCkgPT4ge1xyXG4gICAgICAgIGNvbnN0IHNoaXBwaW5nT3B0aW9uID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2t0X2Vjb21tZXJjZV9hZGRfcHJvZHVjdF9zaGlwcGluZ19jaGVja2JveCcpO1xyXG4gICAgICAgIGNvbnN0IHNoaXBwaW5nRm9ybSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdrdF9lY29tbWVyY2VfYWRkX3Byb2R1Y3Rfc2hpcHBpbmcnKTtcclxuXHJcbiAgICAgICAgc2hpcHBpbmdPcHRpb24uYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgZSA9PiB7XHJcbiAgICAgICAgICAgIGNvbnN0IHZhbHVlID0gZS50YXJnZXQuY2hlY2tlZDtcclxuXHJcbiAgICAgICAgICAgIGlmICh2YWx1ZSkge1xyXG4gICAgICAgICAgICAgICAgc2hpcHBpbmdGb3JtLmNsYXNzTGlzdC5yZW1vdmUoJ2Qtbm9uZScpO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgc2hpcHBpbmdGb3JtLmNsYXNzTGlzdC5hZGQoJ2Qtbm9uZScpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gQ2F0ZWdvcnkgc3RhdHVzIGhhbmRsZXJcclxuICAgIGNvbnN0IGhhbmRsZVN0YXR1cyA9ICgpID0+IHtcclxuICAgICAgICBjb25zdCB0YXJnZXQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgna3RfZWNvbW1lcmNlX2FkZF9wcm9kdWN0X3N0YXR1cycpO1xyXG4gICAgICAgIGNvbnN0IHNlbGVjdCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdrdF9lY29tbWVyY2VfYWRkX3Byb2R1Y3Rfc3RhdHVzX3NlbGVjdCcpO1xyXG4gICAgICAgIGNvbnN0IHN0YXR1c0NsYXNzZXMgPSBbJ2JnLXN1Y2Nlc3MnLCAnYmctd2FybmluZycsICdiZy1kYW5nZXInXTtcclxuXHJcbiAgICAgICAgJChzZWxlY3QpLm9uKCdjaGFuZ2UnLCBmdW5jdGlvbiAoZSkge1xyXG4gICAgICAgICAgICBjb25zdCB2YWx1ZSA9IGUudGFyZ2V0LnZhbHVlO1xyXG5cclxuICAgICAgICAgICAgc3dpdGNoICh2YWx1ZSkge1xyXG4gICAgICAgICAgICAgICAgY2FzZSBcInB1Ymxpc2hlZFwiOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGFyZ2V0LmNsYXNzTGlzdC5yZW1vdmUoLi4uc3RhdHVzQ2xhc3Nlcyk7XHJcbiAgICAgICAgICAgICAgICAgICAgdGFyZ2V0LmNsYXNzTGlzdC5hZGQoJ2JnLXN1Y2Nlc3MnKTtcclxuICAgICAgICAgICAgICAgICAgICBoaWRlRGF0ZXBpY2tlcigpO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgY2FzZSBcInNjaGVkdWxlZFwiOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGFyZ2V0LmNsYXNzTGlzdC5yZW1vdmUoLi4uc3RhdHVzQ2xhc3Nlcyk7XHJcbiAgICAgICAgICAgICAgICAgICAgdGFyZ2V0LmNsYXNzTGlzdC5hZGQoJ2JnLXdhcm5pbmcnKTtcclxuICAgICAgICAgICAgICAgICAgICBzaG93RGF0ZXBpY2tlcigpO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgY2FzZSBcImluYWN0aXZlXCI6IHtcclxuICAgICAgICAgICAgICAgICAgICB0YXJnZXQuY2xhc3NMaXN0LnJlbW92ZSguLi5zdGF0dXNDbGFzc2VzKTtcclxuICAgICAgICAgICAgICAgICAgICB0YXJnZXQuY2xhc3NMaXN0LmFkZCgnYmctZGFuZ2VyJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgaGlkZURhdGVwaWNrZXIoKTtcclxuICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGNhc2UgXCJkcmFmdFwiOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGFyZ2V0LmNsYXNzTGlzdC5yZW1vdmUoLi4uc3RhdHVzQ2xhc3Nlcyk7XHJcbiAgICAgICAgICAgICAgICAgICAgdGFyZ2V0LmNsYXNzTGlzdC5hZGQoJ2JnLXByaW1hcnknKTtcclxuICAgICAgICAgICAgICAgICAgICBoaWRlRGF0ZXBpY2tlcigpO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgZGVmYXVsdDpcclxuICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG5cclxuXHJcbiAgICAgICAgLy8gSGFuZGxlIGRhdGVwaWNrZXJcclxuICAgICAgICBjb25zdCBkYXRlcGlja2VyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2t0X2Vjb21tZXJjZV9hZGRfcHJvZHVjdF9zdGF0dXNfZGF0ZXBpY2tlcicpO1xyXG5cclxuICAgICAgICAvLyBJbml0IGZsYXRwaWNrciAtLS0gbW9yZSBpbmZvOiBodHRwczovL2ZsYXRwaWNrci5qcy5vcmcvXHJcbiAgICAgICAgJCgnI2t0X2Vjb21tZXJjZV9hZGRfcHJvZHVjdF9zdGF0dXNfZGF0ZXBpY2tlcicpLmZsYXRwaWNrcih7XHJcbiAgICAgICAgICAgIGVuYWJsZVRpbWU6IHRydWUsXHJcbiAgICAgICAgICAgIGRhdGVGb3JtYXQ6IFwiWS1tLWQgSDppXCIsXHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIGNvbnN0IHNob3dEYXRlcGlja2VyID0gKCkgPT4ge1xyXG4gICAgICAgICAgICBkYXRlcGlja2VyLnBhcmVudE5vZGUuY2xhc3NMaXN0LnJlbW92ZSgnZC1ub25lJyk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBjb25zdCBoaWRlRGF0ZXBpY2tlciA9ICgpID0+IHtcclxuICAgICAgICAgICAgZGF0ZXBpY2tlci5wYXJlbnROb2RlLmNsYXNzTGlzdC5hZGQoJ2Qtbm9uZScpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvLyBDb25kaXRpb24gdHlwZSBoYW5kbGVyXHJcbiAgICBjb25zdCBoYW5kbGVDb25kaXRpb25zID0gKCkgPT4ge1xyXG4gICAgICAgIGNvbnN0IGFsbENvbmRpdGlvbnMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCdbbmFtZT1cIm1ldGhvZFwiXVt0eXBlPVwicmFkaW9cIl0nKTtcclxuICAgICAgICBjb25zdCBjb25kaXRpb25NYXRjaCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLWt0LWVjb21tZXJjZS1jYXRhbG9nLWFkZC1jYXRlZ29yeT1cImF1dG8tb3B0aW9uc1wiXScpO1xyXG4gICAgICAgIGFsbENvbmRpdGlvbnMuZm9yRWFjaChyYWRpbyA9PiB7XHJcbiAgICAgICAgICAgIHJhZGlvLmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIGUgPT4ge1xyXG4gICAgICAgICAgICAgICAgaWYgKGUudGFyZ2V0LnZhbHVlID09PSAnMScpIHtcclxuICAgICAgICAgICAgICAgICAgICBjb25kaXRpb25NYXRjaC5jbGFzc0xpc3QucmVtb3ZlKCdkLW5vbmUnKTtcclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29uZGl0aW9uTWF0Y2guY2xhc3NMaXN0LmFkZCgnZC1ub25lJyk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH0pXHJcbiAgICB9XHJcblxyXG4gICAgLy8gU3VibWl0IGZvcm0gaGFuZGxlclxyXG4gICAgY29uc3QgaGFuZGxlU3VibWl0ID0gKCkgPT4ge1xyXG4gICAgICAgIC8vIERlZmluZSB2YXJpYWJsZXNcclxuICAgICAgICBsZXQgdmFsaWRhdG9yO1xyXG5cclxuICAgICAgICAvLyBHZXQgZWxlbWVudHNcclxuICAgICAgICBjb25zdCBmb3JtID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2t0X2Vjb21tZXJjZV9hZGRfcHJvZHVjdF9mb3JtJyk7XHJcbiAgICAgICAgY29uc3Qgc3VibWl0QnV0dG9uID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2t0X2Vjb21tZXJjZV9hZGRfcHJvZHVjdF9zdWJtaXQnKTtcclxuXHJcbiAgICAgICAgLy8gSW5pdCBmb3JtIHZhbGlkYXRpb24gcnVsZXMuIEZvciBtb3JlIGluZm8gY2hlY2sgdGhlIEZvcm1WYWxpZGF0aW9uIHBsdWdpbidzIG9mZmljaWFsIGRvY3VtZW50YXRpb246aHR0cHM6Ly9mb3JtdmFsaWRhdGlvbi5pby9cclxuICAgICAgICB2YWxpZGF0b3IgPSBGb3JtVmFsaWRhdGlvbi5mb3JtVmFsaWRhdGlvbihcclxuICAgICAgICAgICAgZm9ybSxcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgZmllbGRzOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgJ3Byb2R1Y3RfbmFtZSc6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFsaWRhdG9yczoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbm90RW1wdHk6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZXNzYWdlOiAnUHJvZHVjdCBuYW1lIGlzIHJlcXVpcmVkJ1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAnc2t1Jzoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YWxpZGF0b3JzOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBub3RFbXB0eToge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6ICdTS1UgaXMgcmVxdWlyZWQnXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICdza3UnOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbGlkYXRvcnM6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5vdEVtcHR5OiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogJ1Byb2R1Y3QgYmFyY29kZSBpcyByZXF1aXJlZCdcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgJ3NoZWxmJzoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YWxpZGF0b3JzOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBub3RFbXB0eToge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6ICdTaGVsZiBxdWFudGl0eSBpcyByZXF1aXJlZCdcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgJ3ByaWNlJzoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YWxpZGF0b3JzOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBub3RFbXB0eToge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6ICdQcm9kdWN0IGJhc2UgcHJpY2UgaXMgcmVxdWlyZWQnXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICd0YXgnOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbGlkYXRvcnM6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5vdEVtcHR5OiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogJ1Byb2R1Y3QgdGF4IGNsYXNzIGlzIHJlcXVpcmVkJ1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIHBsdWdpbnM6IHtcclxuICAgICAgICAgICAgICAgICAgICB0cmlnZ2VyOiBuZXcgRm9ybVZhbGlkYXRpb24ucGx1Z2lucy5UcmlnZ2VyKCksXHJcbiAgICAgICAgICAgICAgICAgICAgYm9vdHN0cmFwOiBuZXcgRm9ybVZhbGlkYXRpb24ucGx1Z2lucy5Cb290c3RyYXA1KHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcm93U2VsZWN0b3I6ICcuZnYtcm93JyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgZWxlSW52YWxpZENsYXNzOiAnJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgZWxlVmFsaWRDbGFzczogJydcclxuICAgICAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgKTtcclxuXHJcbiAgICAgICAgLy8gSGFuZGxlIHN1Ym1pdCBidXR0b25cclxuICAgICAgICBzdWJtaXRCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBlID0+IHtcclxuICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG5cclxuICAgICAgICAgICAgLy8gVmFsaWRhdGUgZm9ybSBiZWZvcmUgc3VibWl0XHJcbiAgICAgICAgICAgIGlmICh2YWxpZGF0b3IpIHtcclxuICAgICAgICAgICAgICAgIHZhbGlkYXRvci52YWxpZGF0ZSgpLnRoZW4oZnVuY3Rpb24gKHN0YXR1cykge1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCd2YWxpZGF0ZWQhJyk7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIGlmIChzdGF0dXMgPT0gJ1ZhbGlkJykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBzdWJtaXRCdXR0b24uc2V0QXR0cmlidXRlKCdkYXRhLWt0LWluZGljYXRvcicsICdvbicpO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gRGlzYWJsZSBzdWJtaXQgYnV0dG9uIHdoaWxzdCBsb2FkaW5nXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHN1Ym1pdEJ1dHRvbi5kaXNhYmxlZCA9IHRydWU7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN1Ym1pdEJ1dHRvbi5yZW1vdmVBdHRyaWJ1dGUoJ2RhdGEta3QtaW5kaWNhdG9yJyk7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgU3dhbC5maXJlKHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0ZXh0OiBcIkZvcm0gaGFzIGJlZW4gc3VjY2Vzc2Z1bGx5IHN1Ym1pdHRlZCFcIixcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpY29uOiBcInN1Y2Nlc3NcIixcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBidXR0b25zU3R5bGluZzogZmFsc2UsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uZmlybUJ1dHRvblRleHQ6IFwiT2ssIGdvdCBpdCFcIixcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjdXN0b21DbGFzczoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25maXJtQnV0dG9uOiBcImJ0biBidG4tcHJpbWFyeVwiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzdWx0KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHJlc3VsdC5pc0NvbmZpcm1lZCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBFbmFibGUgc3VibWl0IGJ1dHRvbiBhZnRlciBsb2FkaW5nXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN1Ym1pdEJ1dHRvbi5kaXNhYmxlZCA9IGZhbHNlO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gUmVkaXJlY3QgdG8gY3VzdG9tZXJzIGxpc3QgcGFnZVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aW5kb3cubG9jYXRpb24gPSBmb3JtLmdldEF0dHJpYnV0ZShcImRhdGEta3QtcmVkaXJlY3RcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sIDIwMDApO1xyXG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFN3YWwuZmlyZSh7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBodG1sOiBcIlNvcnJ5LCBsb29rcyBsaWtlIHRoZXJlIGFyZSBzb21lIGVycm9ycyBkZXRlY3RlZCwgcGxlYXNlIHRyeSBhZ2Fpbi4gPGJyLz48YnIvPlBsZWFzZSBub3RlIHRoYXQgdGhlcmUgbWF5IGJlIGVycm9ycyBpbiB0aGUgPHN0cm9uZz5HZW5lcmFsPC9zdHJvbmc+IG9yIDxzdHJvbmc+QWR2YW5jZWQ8L3N0cm9uZz4gdGFic1wiLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWNvbjogXCJlcnJvclwiLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYnV0dG9uc1N0eWxpbmc6IGZhbHNlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uZmlybUJ1dHRvblRleHQ6IFwiT2ssIGdvdCBpdCFcIixcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGN1c3RvbUNsYXNzOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uZmlybUJ1dHRvbjogXCJidG4gYnRuLXByaW1hcnlcIlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pXHJcbiAgICB9XHJcblxyXG4gICAgLy8gUHVibGljIG1ldGhvZHNcclxuICAgIHJldHVybiB7XHJcbiAgICAgICAgaW5pdDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAvLyBJbml0IGZvcm1zXHJcbiAgICAgICAgICAgIGluaXRRdWlsbCgpO1xyXG4gICAgICAgICAgICBpbml0VGFnaWZ5KCk7XHJcbiAgICAgICAgICAgIGluaXRTbGlkZXIoKTtcclxuICAgICAgICAgICAgaW5pdEZvcm1SZXBlYXRlcigpO1xyXG4gICAgICAgICAgICBpbml0RHJvcHpvbmUoKTtcclxuICAgICAgICAgICAgaW5pdENvbmRpdGlvbnNTZWxlY3QyKCk7XHJcblxyXG4gICAgICAgICAgICAvLyBIYW5kbGUgZm9ybXNcclxuICAgICAgICAgICAgaGFuZGxlU3RhdHVzKCk7XHJcbiAgICAgICAgICAgIGhhbmRsZUNvbmRpdGlvbnMoKTtcclxuICAgICAgICAgICAgaGFuZGxlRGlzY291bnQoKTtcclxuICAgICAgICAgICAgaGFuZGxlU2hpcHBpbmcoKTtcclxuICAgICAgICAgICAgaGFuZGxlU3VibWl0KCk7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxufSgpO1xyXG5cclxuLy8gT24gZG9jdW1lbnQgcmVhZHlcclxuS1RVdGlsLm9uRE9NQ29udGVudExvYWRlZChmdW5jdGlvbiAoKSB7XHJcbiAgICBLVEFwcEVjb21tZXJjZVNhdmVQcm9kdWN0LmluaXQoKTtcclxufSk7XHJcbiJdLCJuYW1lcyI6WyJLVEFwcEVjb21tZXJjZVNhdmVQcm9kdWN0IiwiaW5pdFF1aWxsIiwiZWxlbWVudHMiLCJmb3JFYWNoIiwiZWxlbWVudCIsInF1aWxsIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiUXVpbGwiLCJtb2R1bGVzIiwidG9vbGJhciIsImhlYWRlciIsInBsYWNlaG9sZGVyIiwidGhlbWUiLCJpbml0VGFnaWZ5IiwidGFnaWZ5IiwiVGFnaWZ5Iiwid2hpdGVsaXN0IiwiZHJvcGRvd24iLCJtYXhJdGVtcyIsImNsYXNzbmFtZSIsImVuYWJsZWQiLCJjbG9zZU9uU2VsZWN0IiwiaW5pdEZvcm1SZXBlYXRlciIsIiQiLCJyZXBlYXRlciIsImluaXRFbXB0eSIsImRlZmF1bHRWYWx1ZXMiLCJzaG93Iiwic2xpZGVEb3duIiwiaW5pdENvbmRpdGlvbnNTZWxlY3QyIiwiaGlkZSIsImRlbGV0ZUVsZW1lbnQiLCJzbGlkZVVwIiwiYWxsQ29uZGl0aW9uVHlwZXMiLCJxdWVyeVNlbGVjdG9yQWxsIiwidHlwZSIsImhhc0NsYXNzIiwic2VsZWN0MiIsIm1pbmltdW1SZXN1bHRzRm9yU2VhcmNoIiwiaW5pdFNsaWRlciIsInNsaWRlciIsInZhbHVlIiwibm9VaVNsaWRlciIsImNyZWF0ZSIsInN0YXJ0IiwiY29ubmVjdCIsInJhbmdlIiwib24iLCJ2YWx1ZXMiLCJoYW5kbGUiLCJpbm5lckhUTUwiLCJNYXRoIiwicm91bmQiLCJpbml0RHJvcHpvbmUiLCJteURyb3B6b25lIiwiRHJvcHpvbmUiLCJ1cmwiLCJwYXJhbU5hbWUiLCJtYXhGaWxlcyIsIm1heEZpbGVzaXplIiwiYWRkUmVtb3ZlTGlua3MiLCJhY2NlcHQiLCJmaWxlIiwiZG9uZSIsIm5hbWUiLCJoYW5kbGVEaXNjb3VudCIsImRpc2NvdW50T3B0aW9ucyIsInBlcmNlbnRhZ2VFbCIsImdldEVsZW1lbnRCeUlkIiwiZml4ZWRFbCIsIm9wdGlvbiIsImFkZEV2ZW50TGlzdGVuZXIiLCJlIiwidGFyZ2V0IiwiY2xhc3NMaXN0IiwicmVtb3ZlIiwiYWRkIiwiaGFuZGxlU2hpcHBpbmciLCJzaGlwcGluZ09wdGlvbiIsInNoaXBwaW5nRm9ybSIsImNoZWNrZWQiLCJoYW5kbGVTdGF0dXMiLCJzZWxlY3QiLCJzdGF0dXNDbGFzc2VzIiwiaGlkZURhdGVwaWNrZXIiLCJzaG93RGF0ZXBpY2tlciIsImRhdGVwaWNrZXIiLCJmbGF0cGlja3IiLCJlbmFibGVUaW1lIiwiZGF0ZUZvcm1hdCIsInBhcmVudE5vZGUiLCJoYW5kbGVDb25kaXRpb25zIiwiYWxsQ29uZGl0aW9ucyIsImNvbmRpdGlvbk1hdGNoIiwicmFkaW8iLCJoYW5kbGVTdWJtaXQiLCJ2YWxpZGF0b3IiLCJmb3JtIiwic3VibWl0QnV0dG9uIiwiRm9ybVZhbGlkYXRpb24iLCJmb3JtVmFsaWRhdGlvbiIsImZpZWxkcyIsInZhbGlkYXRvcnMiLCJub3RFbXB0eSIsIm1lc3NhZ2UiLCJwbHVnaW5zIiwidHJpZ2dlciIsIlRyaWdnZXIiLCJib290c3RyYXAiLCJCb290c3RyYXA1Iiwicm93U2VsZWN0b3IiLCJlbGVJbnZhbGlkQ2xhc3MiLCJlbGVWYWxpZENsYXNzIiwicHJldmVudERlZmF1bHQiLCJ2YWxpZGF0ZSIsInRoZW4iLCJzdGF0dXMiLCJjb25zb2xlIiwibG9nIiwic2V0QXR0cmlidXRlIiwiZGlzYWJsZWQiLCJzZXRUaW1lb3V0IiwicmVtb3ZlQXR0cmlidXRlIiwiU3dhbCIsImZpcmUiLCJ0ZXh0IiwiaWNvbiIsImJ1dHRvbnNTdHlsaW5nIiwiY29uZmlybUJ1dHRvblRleHQiLCJjdXN0b21DbGFzcyIsImNvbmZpcm1CdXR0b24iLCJyZXN1bHQiLCJpc0NvbmZpcm1lZCIsIndpbmRvdyIsImxvY2F0aW9uIiwiZ2V0QXR0cmlidXRlIiwiaHRtbCIsImluaXQiLCJLVFV0aWwiLCJvbkRPTUNvbnRlbnRMb2FkZWQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./resources/assets/core/js/custom/apps/ecommerce/catalog/save-product.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/assets/core/js/custom/apps/ecommerce/catalog/save-product.js"]();
/******/ 	
/******/ })()
;